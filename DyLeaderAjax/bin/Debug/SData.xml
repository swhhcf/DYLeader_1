<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SData</name>
    </assembly>
    <members>
        <member name="T:Btc.Data.SAction">
            <summary>
            MAction扩展方法
            </summary>
        </member>
        <member name="M:Btc.Data.SAction.Select(System.Object,System.String,System.Object[])">
            <summary>
            查询数据
            </summary>
            <param name="tableName">表名</param>
            <param name="where">条件</param>
            <param name="selectColumns">要查询的字段。如果前两个为整数，则调用分页查询</param>
            <returns></returns>
        </member>
        <member name="M:Btc.Data.SAction.Select(System.Object,System.String,System.Boolean,System.Object[])">
            <summary>
            查询表的指定列，字段可以为全名（如 table.field）
            </summary>
            <param name="tableName">表名</param>
            <param name="where"></param>
            <param name="isFullName"></param>
            <param name="selectColumns"></param>
            <returns></returns>
        </member>
        <member name="M:Btc.Data.SAction.Select(System.Object,System.String,System.Boolean,System.Object)">
             <summary>
            
             </summary>
             <param name="tableName"></param>
             <param name="where"></param>
             <param name="isFullName"></param>
             <param name="enumObj"></param>
             <returns></returns>
        </member>
        <member name="M:Btc.Data.SAction.Select(CYQ.Data.MAction,System.String,System.Object[])">
            <summary>
            查询数据
            </summary>
            <param name="action">MAction名</param>
            <param name="where">条件</param>
            <param name="selectColumns">要查询的字段。如果前两个为整数，则调用分页查询</param>
            <returns></returns>
        </member>
        <member name="M:Btc.Data.SAction.GetOneValue``1(System.Object,System.String,System.Object)">
            <summary>
            获取满足条件的第一条记录的某个字段值
            </summary>
            <param name="tableName"></param>
            <param name="where"></param>
            <param name="fieldname"></param>
            <returns></returns>
        </member>
        <member name="M:Btc.Data.SAction.GetOneValue``1(CYQ.Data.MAction,System.String,System.Object,System.String)">
            <summary>
            获取满足条件的第一条记录的某个字段值
            </summary>
            <param name="action"></param>
            <param name="where"></param>
            <param name="fieldname">设置的字段名。字段为聚合函数时，要加上 as key</param>
            <param name="key">当设置的字段为聚合函数时as 后的名称</param>
            <returns></returns>
        </member>
        <member name="M:Btc.Data.SAction.GetColValueList(CYQ.Data.MAction,System.String,System.String)">
            <summary>
            把某一列的值转成用","隔开的字符串
            </summary>
            <param name="action"></param>
            <param name="where"></param>
            <param name="fieldName"></param>
            <returns></returns>
        </member>
        <member name="M:Btc.Data.SAction.Distinct(System.Object,System.String,System.Object[])">
            <summary>
            查询数据，去除重复行
            </summary>
            <param name="tableName"></param>
            <param name="where"></param>
            <param name="selectColumns"></param>
            <returns></returns>
        </member>
        <member name="M:Btc.Data.SAction.Distinct(CYQ.Data.MAction,System.String,System.Object[])">
            <summary>
            查询数据，去除重复行
            </summary>
            <param name="action"></param>
            <param name="where"></param>
            <param name="selectColumns"></param>
            <returns></returns>
        </member>
        <member name="M:Btc.Data.SAction.Select(System.Object,System.Collections.Specialized.NameValueCollection,System.Object[])">
            <summary>
            根据前台提交的查询条件(包括分页条件)查询数据
            </summary>
            <param name="tableName"></param>
            <param name="fieldValueCollection">前台提交的查询条件</param>
            <param name="selectColumns"></param>
            <returns></returns>
        </member>
        <member name="M:Btc.Data.SAction.Select(CYQ.Data.MAction,System.Collections.Specialized.NameValueCollection,System.Object[])">
            <summary>
            根据前台提交的查询条件(包括分页条件)查询数据
            </summary>
            <param name="action"></param>
            <param name="fieldValueCollection">前台提交的查询条件</param>
            <param name="selectColumns"></param>
            <returns></returns>
        </member>
        <member name="M:Btc.Data.SAction.Update(System.Object,System.String,System.Object[])">
            <summary>
            更新数据
            </summary>
            <param name="tableName"></param>
            <param name="where"></param>
            <param name="fieldValues"></param>
            <returns></returns>
        </member>
        <member name="M:Btc.Data.SAction.Update(CYQ.Data.MAction,System.String,System.Object[])">
            <summary>
            更新数据
            </summary>
            <param name="action"></param>
            <param name="where"></param>
            <param name="fieldValues"></param>
            <returns></returns>
        </member>
        <member name="M:Btc.Data.SAction.Update(System.Object,System.Collections.Specialized.NameValueCollection)">
            <summary>
            根据前端提交的数据（包含id），更新数据
            </summary>
            <param name="tableName"></param>
            <param name="form">前端提交的数据，包含字段id</param>
            <returns></returns>
        </member>
        <member name="M:Btc.Data.SAction.Update(CYQ.Data.MAction,System.Collections.Specialized.NameValueCollection)">
            <summary>
            根据前端提交的数据（包含id），更新数据
            </summary>
            <param name="action"></param>
            <param name="form">前端提交的数据，包含字段id</param>
            <returns></returns>
        </member>
        <member name="M:Btc.Data.SAction.Update(System.Object,System.String,System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            根据键值对集合更新数据
            </summary>
            <param name="tableName"></param>
            <param name="where"></param>
            <param name="fieldValueCollection"></param>
            <param name="prefix"></param>
            <returns></returns>
        </member>
        <member name="M:Btc.Data.SAction.Update(System.Object,System.String,System.Collections.Specialized.NameValueCollection,System.Object[])">
            <summary>
            根据键值对集合 和 字段及相应值 更新数据
            </summary>
            <param name="tableName"></param>
            <param name="where"></param>
            <param name="fieldValueCollection"></param>
            <param name="otherFieldValues"></param>
            <returns></returns>
        </member>
        <member name="M:Btc.Data.SAction.Update(System.Object,System.String,System.Collections.Specialized.NameValueCollection,System.String,System.String[])">
            <summary>
            根据键值对集合 和 字段及相应值 更新数据
            </summary>
            <param name="tableName"></param>
            <param name="where"></param>
            <param name="fieldValueCollection"></param>
            <param name="prefix"></param>
            <param name="otherFieldValues"></param>
            <returns></returns>
        </member>
        <member name="M:Btc.Data.SAction.Update(CYQ.Data.MAction,System.String,System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            根据键值对集合更新数据
            </summary>
            <param name="action"></param>
            <param name="where"></param>
            <param name="fieldValueCollection"></param>
            <param name="prefix"></param>
            <returns></returns>
        </member>
        <member name="M:Btc.Data.SAction.Update(CYQ.Data.MAction,System.String,System.Collections.Specialized.NameValueCollection,System.Object[])">
            <summary>
            根据键值对集合更新数据
            </summary>
            <param name="action"></param>
            <param name="where"></param>
            <param name="fieldValueCollection"></param>
            <param name="fieldValues"></param>
            <returns></returns>
        </member>
        <member name="M:Btc.Data.SAction.Insert(System.Object,System.Object[])">
            <summary>
            插入数据
            </summary>
            <param name="tableName"></param>
            <param name="fieldValues"></param>
            <returns></returns>
        </member>
        <member name="M:Btc.Data.SAction.Insert(System.Object,System.Collections.Specialized.NameValueCollection,System.Object[])">
            <summary>
            根据键值对插入数据
            </summary>
            <param name="tableName"></param>
            <param name="fieldValueCollection"></param>
            <param name="otherFieldValues"></param>
            <returns></returns>
        </member>
        <member name="M:Btc.Data.SAction.Insert(System.Object,System.Collections.Specialized.NameValueCollection,System.String,System.Object[])">
            <summary>
            根据键值对插入数据
            </summary>
            <param name="tableName"></param>
            <param name="fieldValueCollection"></param>
            <param name="prefix"></param>
            <param name="otherFieldValues"></param>
            <returns></returns>
        </member>
        <member name="M:Btc.Data.SAction.Insert(CYQ.Data.MAction,System.Object[])">
            <summary>
            插入数据
            </summary>
            <param name="action"></param>
            <param name="fieldValues"></param>
            <returns></returns>
        </member>
        <member name="M:Btc.Data.SAction.Insert(CYQ.Data.MAction,System.Collections.Specialized.NameValueCollection,System.String,System.Object[])">
            <summary>
            插入数据
            </summary>
            <param name="action"></param>
            <param name="collection"></param>
            <param name="prefix"></param>
            <param name="otherFieldValues"></param>
            <returns></returns>
        </member>
        <member name="M:Btc.Data.SAction.Delete(System.Object,System.String)">
            <summary>
            删除满足条件的记录
            </summary>
            <param name="tableName"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Btc.Data.SAction.ResetTableAlowNull(CYQ.Data.MAction,System.Object)">
            <summary>
            切换表或视图
            </summary>
            <param name="action">MAction名</param>
            <param name="tableName">要切换的表，如果为空，则不切换</param>
        </member>
        <member name="M:Btc.Data.SAction.SetFieldValues(CYQ.Data.MAction,System.Object[])">
            <summary>
            设置相应字段的值
            </summary>
            <param name="action"></param>
            <param name="fieldValues"></param>
        </member>
        <member name="M:Btc.Data.SAction.SetFieldValues(CYQ.Data.MAction,System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            根据键值对集合设置相应字段的值
            </summary>
            <param name="action"></param>
            <param name="fieldValueCollection"></param>
            <param name="prefix"></param>
        </member>
        <member name="M:Btc.Data.SAction.SetTableAndFieldValues``1(CYQ.Data.MAction,System.Object,``0)">
            <summary>
            切换表，并根据Model设置相应字段的值
            </summary>
            <param name="action"></param>
            <param name="tableName"></param>
            <param name="model"></param>
        </member>
        <member name="M:Btc.Data.SDataTable.GetColDistinctCount(CYQ.Data.Table.MDataTable,System.String)">
            <summary>
            获取数据表中某列的值的个数（不重复）
            </summary>
            <param name="dt"></param>
            <param name="fieldName"></param>
            <returns></returns>
        </member>
        <member name="M:Btc.Data.SDataTable.GetColDistinct(CYQ.Data.Table.MDataTable,System.String)">
            <summary>
            获取数据表中某列的值的数组（不重复）
            </summary>
            <param name="dt"></param>
            <param name="fieldName"></param>
            <returns></returns>
        </member>
        <member name="M:Btc.Data.SDataTable.ToJson(CYQ.Data.Table.MDataTable,System.Int32)">
            <summary>
            分页 MDataTable 转为json字符串
            </summary>
            <param name="dt"></param>
            <param name="total"></param>
            <returns></returns>
        </member>
        <member name="M:Btc.Data.SDataTable.ToRowJson(CYQ.Data.Table.MDataTable,System.Boolean)">
            <summary>
            MDataTable 转为json字符串, 只包含数据信息
            </summary>
            <param name="dt"></param>
            <param name="isArray">是否为数组形式（用[]包裹，如[{a:1},{a:2}]）</param>
            <returns></returns>
        </member>
        <member name="M:Btc.Data.SDataTable.ToTopOneJson(CYQ.Data.Table.MDataTable)">
            <summary>
            把第一行转为Json
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Btc.Data.SDataTable.ClearRepeateInfo``1(CYQ.Data.Table.MDataTable,``0[],``0[])">
            <summary>
            去除列的重复信息
            </summary>
            <typeparam name="T"></typeparam>
            <param name="dt"></param>
            <param name="mainIndexes">主索引（如果主索引不同，则不去重）</param>
            <param name="indexes">要去重的索引（可以是整数、列名）</param>
            <returns></returns>
        </member>
        <member name="M:Btc.Data.SDataTable.ClearRepeateInfo``1(CYQ.Data.Table.MDataTable,``0[])">
            <summary>
            去除列的重复信息
            </summary>
            <typeparam name="T"></typeparam>
            <param name="dt"></param>
            <param name="indexes">要去重的索引（可以是整数、列名）</param>
            <returns></returns>
        </member>
        <member name="T:Btc.Data.SProc">
            <summary>
            存储过程
            </summary>
        </member>
    </members>
</doc>
